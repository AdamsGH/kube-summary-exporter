name: Build and publish Docker image to GHCR

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
        default: 'master'
        type: string
      tag:
        description: 'Docker image tag'
        required: false
        default: 'master'
        type: string
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      pushImage:
        description: 'Push image to registry'
        required: true
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.branch }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ github.event.inputs.tag }}
          type=sha

    - name: Display tags
      run: 'echo "Tags to push: ${{ steps.meta.outputs.tags }}"'

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event.inputs.pushImage }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      if: steps.build-and-push.outputs.pushed == 'true'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build-and-push.outputs.digest }}
        push-to-registry: true

    - name: Log the inputs
      run: |
        echo "Log level: $LOG_LEVEL"
        echo "Push Image: $PUSH_IMAGE"
        echo "Branch: $BRANCH"
      env:
        LOG_LEVEL: ${{ github.event.inputs.logLevel }}
        PUSH_IMAGE: ${{ github.event.inputs.pushImage }}
        BRANCH: ${{ github.event.inputs.branch }}
